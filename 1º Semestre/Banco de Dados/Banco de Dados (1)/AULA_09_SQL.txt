-- SQL - DQL - LINGUAGEM DE CONSULTA A DADOS

-- Execute o script de criação do banco de dados bd_rh, antes de começar.

USE bd_rh;

-- CONSULTA SQL BÁSICA
SELECT Funcionario.Nom_Func, Funcionario.Val_Salario, Funcionario.Cod_Cargo, Funcionario.Cod_Formacao, Funcionario.Cod_Func_Supervisor
FROM Funcionario
WHERE Funcionario.Val_Salario > 1000
ORDER BY Funcionario.Val_Salario;

SELECT Nom_Func, Val_Salario, Cod_Cargo, Cod_Formacao, Cod_Func_Supervisor
FROM Funcionario
WHERE Val_Salario > 1000
ORDER BY Val_Salario;

-- OPERADORES BÁSICOS DE COMPARAÇÃO: =, <, <=, >, >=, <>
SELECT Nom_Func, Val_Salario, Cod_Cargo, Cod_Formacao, Cod_Func_Supervisor
FROM Funcionario
WHERE Cod_Cargo <> 1
ORDER BY Dta_Admissao;

-- OPERADORES BÁSICOS LOGICOS: AND, OR
SELECT Nom_Func, Val_Salario, Cod_Cargo, Cod_Formacao, Cod_Func_Supervisor
FROM Funcionario
WHERE (Cod_Cargo = 4 OR Cod_Formacao = 3) AND Val_Salario > 2000
ORDER BY Val_Salario DESC;

-- Fazer os exercícios

-- OPERADOR DISTINCT
SELECT Cod_Cargo
FROM Funcionario;

SELECT DISTINCT Cod_Cargo
FROM Funcionario;

-- OPERADOR BETWEEN
SELECT *
FROM Funcionario
WHERE Val_Salario BETWEEN 2000 AND 3000;

-- OPERADOR IS NULL E IS NOT NULL
SELECT Nom_Func, Val_Salario, Cod_Func_Supervisor
FROM Funcionario
WHERE Cod_Func_Supervisor IS NULL;

SELECT Nom_Func, Val_Salario, Cod_Func_Supervisor
FROM Funcionario
WHERE Cod_Func_Supervisor IS NOT NULL;

-- Fazer os exercícios

-- OPERADOR IN E NOT IN

SELECT Nom_Func, Val_Salario, Cod_Cargo
FROM Funcionario
WHERE Cod_Cargo IN (1,3,5);

SELECT Nom_Func, Val_Salario, Cod_Func_Supervisor
FROM Funcionario
WHERE Cod_Func_Supervisor NOT IN (2,4);

-- OPERADOR LIKE

SELECT *
FROM Funcionario
WHERE Des_Endereco LIKE '%BH%';

SELECT *
FROM Funcionario
WHERE Nom_Func LIKE 'JO%'
ORDER BY Nom_Func ;

SELECT *
FROM Funcionario
WHERE Des_Endereco LIKE '%BH';

-- SQL Alias: Pode-se dar um nome diferente (e mais amigável) a uma coluna ou tabela 

SELECT Nom_Func AS 'Nome do Funcionário', Val_Salario AS 'Valor Salário'
FROM Funcionario;

-- Funcao DATEDIFF Para recuperar diferença entre duas datas

SELECT Nom_Func, Dta_Nascimento, 
DATEDIFF(Now(), Dta_Nascimento) AS 'Idade em Dias', 
(DATEDIFF(Now(), Dta_Nascimento) / 365) AS 'Idade em Anos'
FROM Funcionario;

-- Fazer os exercícios

-- Pode-se usar os seguintes operadores aritméticos (*, /, -, +) nas cláusulas WHERE.

-- Recupere o nome, data de admissao e valor atual do salario do funcionário que trabalha a mais de um ano na empresa e 
-- que teria salário menor que 3000 reais caso seu salário atual fosse reajustado em 15 %. 

SELECT Nom_Func AS 'Funcionários com mais de um ano de trabalho', Dta_Admissao,  Val_Salario
FROM Funcionario
WHERE (Val_Salario * 1.15) < 3000 AND DATEDIFF(Now(), Dta_Admissao) > 365;

-- Fazer os exercícios

